datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String
  password  String
  role      Role
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  formInput FormInput[]
}

model Place {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model FormInput {
  id               Int      @id @default(autoincrement())
  lokasi          String ?
  lat             Float ?
  long            Float ?
  img             String?
  jmlhBantuan     Int ?
  jenisBantuan    String ?
  jmlhKK          Int ?
  jmlhMasyarakat  Int ?
  jmlhPerempuan   Int ?
  jmlhLaki        Int ?
  debitAir        Int ?
  pemakaianAir    String ?
  sistemPengelolaan String ?  
  sumberAir       String ?     
  hargaAir        Int ?
  pH             Float?  
  TDS            Float?  
  EC             Float?  
  ORP            Float?  
  createdAt      DateTime  @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  outcome Outcome? @relation("FormInputToOutcome")
  dampak  Dampak?  @relation("FormInputToDampak")
}


model Outcome {
  id                              Int      @id @default(autoincrement())
  formInputId                     Int      @unique
  konsumsiAirPerTahun             Float ?
  kualitasAir                     Boolean?
  rataRataTerpaparPenyakitSebelum Int ?
  rataRataTerpaparPenyakitSesudah Int ?
  // awarenessMasyarakat             String
  // penilaianSaranaAirBersih        String
  // penilaianSanitasi               String
  // deskripsiAwareness              String
  bisaDipakaiMCK                  Boolean?
  bisaDiminum                     Boolean?
  ecoKeberlanjutan                Boolean?
  levelSaranaAirBersih            Int?
  levelSanitasi                   Int?
  createdAt                       DateTime @default(now())

  // Data tambahan untuk perhitungan levelSaranaAirBersih
  airHanyaUntukMCK                Boolean?
  aksesTerbatas                   Boolean?
  butuhUsahaJarak                 Boolean?
  airTersediaSetiapSaat           Boolean?
  pengelolaanProfesional          Boolean?
  aksesMudah                      Boolean?
  efisiensiAir                    Boolean?
  ramahLingkungan                 Boolean?
  keadilanAkses                   Boolean?
  adaptabilitasSistem             Boolean?

  // Data tambahan untuk perhitungan levelSanitasi
  toiletBerfungsi                 Boolean?
  aksesSanitasiMemadai            Boolean?
  eksposurLimbah                  Boolean?
  limbahDikelolaAman              Boolean?
  adaSeptictank                   Boolean?
  sanitasiBersih                  Boolean?
  aksesKelompokRentan             Boolean?
  rasioMCKMemadai                 Boolean?
  keberlanjutanEkosistem          Boolean?
  pemanfaatanAirEfisien           Boolean?

  formInput FormInput @relation("FormInputToOutcome", fields: [formInputId], references: [id])
}


model Dampak {
  id                                Int      @id @default(autoincrement())
  formInputId                       Int      @unique
  biayaBerobatSebelum               Float ?
  biayaBerobatSesudah               Float ?
  biayaAirBersihSebelum             Float ?
  biayaAirBersihSesudah             Float ?
  peningkatanEkonomiSebelum         Float ?
  peningkatanEkonomiSesudah         Float ?
  penurunanOrangSakitSebelum        String ?
  penurunanOrangSakitSesudah        String ?
  penurunanStuntingSebelum          Int ?
  penurunanStuntingSesudah          Int ?
  peningkatanIndeksKesehatanSebelum Float ?
  peningkatanIndeksKesehatanSesudah Float ?
  volumeLimbahDikelola              Float ?
  prosesKonservasiAir               Boolean
  penurunanIndexPencemaranSebelum   Float?
  penurunanIndexPencemaranSesudah   Float?
  sumberAirSebelum                  String  ?
  sumberAirSesudah                  String  ?
  biayaListrikSebelum               Float   ?
  biayaListrikSesudah               Float   ?
  createdAt                         DateTime @default(now())

  formInput FormInput @relation("FormInputToDampak", fields: [formInputId], references: [id])
}

enum Role {
  ADMIN
  PETUGAS
}
